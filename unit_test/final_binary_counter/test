INSERT BLOCKS
    JK_LATCH l0,
    JK_LATCH l1,
    JK_LATCH l2,
    JK_LATCH l3,

    VCC vcc,
    STATE OUT PR,
    STATE OUT CLR,
    STATE OUT CLK,

    STATE IN OUT0,
    STATE IN OUT1,
    STATE IN OUT2,
    STATE IN OUT3
    ;

INSERT EDGES
    BTWN l0.Q AND ( OUT0.val ),
    BTWN l1.Q AND ( OUT1.val ),
    BTWN l2.Q AND ( OUT2.val ),
    BTWN l3.Q AND ( OUT3.val ),

    BTWN CLK.val AND ( l0.CLK ),
    BTWN l0.Q AND ( l1.CLK ),
    BTWN l1.Q AND ( l2.CLK ),
    BTWN l2.Q AND ( l3.CLK ),

    BTWN vcc.val AND ( l0.J, l0.K, l1.J, l1.K, l2.J, l2.K, l3.J, l3.K ),

    BTWN PR.val AND ( l0.PR, l1.PR, l2.PR, l3.PR ),
    BTWN CLR.val AND ( l0.CLR, l1.CLR, l2.CLR, l3.CLR )
    ;

INSERT INIT COND
    (PR.val=1, CLR.val=0, CLK.val=0),
    (CLR.val=1),

    (CLK.val=1),
    (CLK.val=0),
    (CLK.val=1),
    (CLK.val=0),
    (CLK.val=1),
    (CLK.val=0),
    (CLK.val=1),
    (CLK.val=0),
    (CLK.val=1),
    (CLK.val=0),
    (CLK.val=1),
    (CLK.val=0),
    (CLK.val=1),
    (CLK.val=0),
    (CLK.val=1)
    ;

RUN;

SHOW RUN (PR.val, CLR.val, CLK.val, OUT0.val, OUT1.val, OUT2.val, OUT3.val);


